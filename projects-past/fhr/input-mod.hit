#[Problem]
#  type = FEProblem
#  coord_type = RZ
#  rz_coord_axis = Y
#[]
[Mesh]
  [omega1]
    type = GeneratedMeshGenerator
    dim = 1
    xmin = 0
    xmax = 1
    nx = 5
  []
  [omega2]
    type = GeneratedMeshGenerator
    dim = 1
    xmin = 1
    xmax = 2
    nx = 5
  []
  [omega]
    type = StitchedMeshGenerator
    inputs = 'omega1 omega2'
    stitch_boundaries_pairs = 'right left'
    clear_stitched_boundary_ids = true
  []
  [mod1]
    type = SubdomainBoundingBoxGenerator
    input = omega
    block_id = 1
    block_name = omega_1
    bottom_left = '0 0 0'
    top_right = '1 1 0'
  []
  [mod2]
    type = SubdomainBoundingBoxGenerator
    input = mod1
    block_id = 2
    block_name = omega_2
    bottom_left = '1 0 0'
    top_right = '2 1 0'
  []
  [mod3]
    type = SideSetsBetweenSubdomainsGenerator
    input = mod2
    primary_block = omega_1
    paired_block = omega_2
    new_boundary = interface_12
  []
  [mod4]
    type = SideSetsAroundSubdomainGenerator
    input = mod3
    block = omega_1
    normal = '-1 0 0'
    new_boundary = omega_1_left
  []
  [mod5]
    type = SideSetsAroundSubdomainGenerator
    input = mod4
    block = omega_2
    normal = '1 0 0'
    new_boundary = omega_2_right
  []
[]
[Variables]
  [tempCoolant]
    block = omega_1
    order = first
    family = lagrange
  []
  [tempFuel]
    block = omega_2
    order = first
    family = lagrange
  []
[]
[AuxVariables]
  [heatFluxCoolant]
    block = omega_1
    order = constant
    family = monomial_vec
  []
  [heatFluxCoolant_r]
    block = omega_1
    order = constant
    family = monomial
  []
  [heatFluxFuel]
    block = omega_2
    order = constant
    family = monomial_vec
  []
  [heatFluxFuel_r]
    block = omega_2
    order = constant
    family = monomial
  []
[]
[Kernels]
  [heat-conduction-coolant]
    block = omega_1
    type = HeatConduction
    variable = tempCoolant
    thermCond = 2
  []
  [source-coolant]
    type = NuclearHeat
    block = omega_1
    variable = tempCoolant
    sourceS = 10
  []
  [heat-conduction-fuel]
    block = omega_2
    type = HeatConduction
    variable = tempFuel
    thermCond = 1
  []
  [source-fuel]
    type = NuclearHeat
    block = omega_2
    variable = tempFuel
    sourceS = 0
  []
[]
[AuxKernels]
  [heat-flux-coolant]
    type = HeatFlux
    block = omega_1
    field = tempCoolant
    thCondCoeff = 4
    variable = heatFluxCoolant
    execute_on = timestep_end
  []
  [heat-flux-coolant-r]
    type = VectorVariableComponentAux
    block = omega_1
    vector_variable = heatFluxCoolant
    component = x
    variable = heatFluxCoolant_r
    execute_on = timestep_end
  []
  [heat-flux-fuel]
    type = HeatFlux
    block = omega_2
    field = tempFuel
    thCondCoeff = 2
    variable = heatFluxFuel
    execute_on = timestep_end
  []
  [heat-flux-fuel-r]
    type = VectorVariableComponentAux
    block = omega_2
    vector_variable = heatFluxFuel
    component = x
    variable = heatFluxFuel_r
    execute_on = timestep_end
  []
[]
[BCs]
  #[center-line]
  #  type = DirichletBC
  #  variable = tempCoolant
  #  boundary = omega_1_left
  #  value = 1
  #[]
  [center-line]
    type = NeumannBC
    variable = tempCoolant
    boundary = omega_1_left
    value = 0
  []
  #[ro]
  #  type = DirichletBC
  #  variable = tempFuel
  #  boundary = omega_2_right
  #  value = 1
  #[]
  [ro]
    type = NormalHeatFluxBC
    variable = tempFuel
    boundary = omega_2_right
    refTempFunc = refTempFunc
    transferCoeff = 1
  []
[]
[Functions]
  [refTempFunc]
    type = ParsedFunction
    value = temp_ref
    vars = temp_ref
    vals = 5
  []
[]
[Preconditioning]
  [./smp]
    type = SMP
    full = true
  [../]
[]

[Executioner]
  type = Steady
  solve_type = PJFNK
  nl_rel_tol = 1e-10
[]
[VectorPostprocessors]
  [omega_1]
    type = LineValueSampler
    execute_on = 'timestep_end final'
    variable = 'tempCoolant heatFluxCoolant_r'
    start_point = '0 0 0'
    end_point = '${fparse 1-1e-3} 0 0'
    num_points = 6
    sort_by = id
  []
  [omega_2]
    type = LineValueSampler
    execute_on = 'timestep_end final'
    variable = 'tempFuel heatFluxFuel_r'
    start_point = '${fparse 1+1e-3} 0 0'
    end_point = '2 0 0'
    num_points = 6
    sort_by = id
  []
[]
[Outputs]
  console = true
  [csv]
    type = CSV
    file_base = output
    execute_on = final
  []
[]
[Debug]
  show_var_residual_norms = true
[]
[InterfaceKernels]
  [normal-heat-flux-continuity]
    type = InterfaceNormalFluxContinuity
    variable = tempCoolant
    neighbor_var = tempFuel
    boundary = interface_12
    thermCond = 4
    thermCondNeighbor = 2
  []
  [temperature-jump]
    type = InterfaceJump
    variable = tempCoolant
    neighbor_var = tempFuel
    boundary = interface_12
    jumpCoeff = 1
  []
[]
